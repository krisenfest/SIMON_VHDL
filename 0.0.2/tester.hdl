library IEEE;
use IEEE.std_logic_1164.all;


entity tester is
end tester;


architecture behaviour of tester is
    component SimonEncryption_32_64
    port(      
        methodSelect: in std_logic_vector(3 downto 0);
            -- 0 - key bits: 16, segments: 4
            -- 1 - key bits: 24, segments: 3
            -- 2 - key bits: 24, segments: 4
            -- 3 - key bits: 32, segments: 3
            -- 4 - key bits: 32, segments: 4
            -- 5 - key bits: 48, segments: 2
            -- 6 - key bits: 48, segments: 3
            -- 7 - key bits: 64, segments: 2
            -- 8 - key bits: 64, segments: 3
            -- 9 - key bits: 64, segments: 4
        keyIn_0,keyIn_1,keyIn_2,keyIn_3: in std_logic_vector(63 downto 0);
        messageIn_0, messageIn_1: in std_logic_vector(63 downto 0);
        messageOut_0, messageOut_1: out std_logic_vector(63 downto 0)
    );
    end component;
    
   signal tester_methodSelect: std_logic_vector(3 downto 0);
        -- 0 - key bits: 16, segments: 4
        -- 1 - key bits: 24, segments: 3
        -- 2 - key bits: 24, segments: 4
        -- 3 - key bits: 32, segments: 3
        -- 4 - key bits: 32, segments: 4
        -- 5 - key bits: 48, segments: 2
        -- 6 - key bits: 48, segments: 3
        -- 7 - key bits: 64, segments: 2
        -- 8 - key bits: 64, segments: 3
        -- 9 - key bits: 64, segments: 4
    signal tester_keyIn_0,tester_keyIn_1,tester_keyIn_2,tester_keyIn_3: std_logic_vector(63 downto 0);
    signal tester_messageIn_0, tester_messageIn_1: std_logic_vector(63 downto 0);
    signal tester_messageOut_0, tester_messageOut_1: std_logic_vector(63 downto 0);
    
    begin
        uut: SimonEncryption_32_64 port map(
            methodSelect => tester_methodSelect,
            keyIn_0 => tester_keyIn_0,
            keyIn_1 => tester_keyIn_1,
            keyIn_2 => tester_keyIn_2,
            keyIn_3 => tester_keyIn_3,
            messageIn_0 => tester_messageIn_0,
            messageIn_1 => tester_messageIn_1,
            messageOut_0 => tester_messageOut_0,
            messageOut_1 => tester_messageOut_1
        );  
          
     process_1: process begin
        wait for 10 us;
            tester_methodSelect <= "0000";
            tester_keyIn_0 <= "0001100100011000";
            tester_keyIn_1 <= "0001000100010000";
            tester_keyIn_2 <= "0000100100001000";
            tester_keyIn_3 <= "0000000100000000";
            tester_messageIn_0 <= "0110010101100101";
            tester_messageIn_1 <= "0110100001110111";
        wait for 10 us;    
            tester_methodSelect <= "0000";
            tester_keyIn_0 <= "0000000000000000";
            tester_keyIn_1 <= "0000000000000000";
            tester_keyIn_2 <= "0000000000000000";
            tester_keyIn_3 <= "0000000000000000";
            tester_messageIn_0 <= "0000000000000000";
            tester_messageIn_1 <= "0000000000000000";
     end process;   
        
end behaviour;
